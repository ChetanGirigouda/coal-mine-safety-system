#include <Wire.h>

#include <LiquidCrystal_I2C.h>

#include <DHT.h>



// DHT11 Configuration

#define DHTPIN 2  // DHT11 connected to pin 2

#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);



// MQ2 and MQ7 Sensor Pins

#define MQ2_PIN A0

#define MQ7_PIN A1



// Buzzer Pin

#define BUZZER_PIN 8



// LCD Configuration

LiquidCrystal_I2C lcd(0x27, 16, 2); // Change 0x27 to your LCD's I2C address if needed



// Thresholds for Gas Sensors

#define MQ2_THRESHOLD 300

#define MQ7_THRESHOLD 400

#define DHT11_THRESHOLD 35



void setup() {

  // Initialize Serial Monitor

  Serial.begin(9600);



  // Initialize DHT Sensor

  dht.begin();



  // Initialize LCD

  lcd.begin(16, 2);

  lcd.backlight(); // Turn on the backlight

  lcd.clear();     // Clear the display



  // Set Buzzer Pin as Output

  pinMode(BUZZER_PIN, OUTPUT);



  // Display Welcome Message

  lcd.setCursor(0, 0);

  lcd.print("Gas Monitoring");

  lcd.setCursor(0, 1);

  lcd.print("System Start");

  delay(2000);

  lcd.clear();

}



void loop() {

  // Read Temperature and Humidity from DHT11

  float temperature = dht.readTemperature();

  float humidity = dht.readHumidity();



  // Check if DHT11 readings are valid

  if (isnan(temperature) || isnan(humidity)) {

    Serial.println("Failed to read from DHT sensor!");

    lcd.setCursor(0, 0);

    lcd.print("DHT Error");

    return;

  }



  // Read MQ2 and MQ7 Sensor Values

  int mq2Value = analogRead(MQ2_PIN);

  int mq7Value = analogRead(MQ7_PIN);



  // Display Readings on Serial Monitor

  Serial.print("Temp: ");

  Serial.print(temperature);

  Serial.print(" C, Hum: ");

  Serial.print(humidity);

  Serial.print(" %, MQ2: ");

  Serial.print(mq2Value);

  Serial.print(", MQ7: ");

  Serial.println(mq7Value);



  // Display Readings on LCD

  lcd.setCursor(0, 0);

  lcd.print("T:");

  lcd.print(temperature);

  lcd.print("C H:");

  lcd.print(humidity);

  lcd.print("%");



  lcd.setCursor(0, 1);

  lcd.print("MQ2:");

  lcd.print(mq2Value);

  lcd.print(" MQ7:");

  lcd.print(mq7Value);



  // Check Thresholds and Trigger Buzzer

  if (mq2Value > MQ2_THRESHOLD || mq7Value > MQ7_THRESHOLD || temperature > DHT11_THRESHOLD) {

    digitalWrite(BUZZER_PIN, HIGH);

    Serial.println("Gas Detected!");

  } else {

    digitalWrite(BUZZER_PIN, LOW);

  }



  delay(2000); // Wait 2 seconds before the next reading

}
